name: CI

on:
  push:
    branches: [master]
  pull_request:
  workflow_dispatch:


env:
  CARGO_INCREMENTAL: 0
  CARGO_NET_RETRY: 10
  CARGO_TERM_COLOR: always
  RUSTUP_MAX_RETRIES: 10

jobs:
  determine_changes:
    name: "Determine Changes"
    runs-on: ubuntu-latest
    outputs:
      # Flag that is raised when any code that affects linter is changed
      linter: ${{ steps.changed.outputs.linter_any_changed }}
      # Flag that is raised when any code that affects formatter is changed
      formatter: ${{ steps.changed.outputs.formatter_any_changed }}
      # Flag that is raised when any code is changed
      # This is superset of the linter and formatter
      code: ${{ steps.changed.outputs.code_any_changed }}

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - uses: tj-actions/changed-files@v44
        id: changed
        with:
          files_yaml: |
            linter:
              - Cargo.toml
              - Cargo.lock
              - src/**
              - .github/workflows/ci.yaml
            formatter:
              - Cargo.toml
              - Cargo.lock
              - src/*
              - .github/workflows/ci.yaml
            code:
              - "**/*"

  cargo-fmt:
    name: "cargo fmt"
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: "Install Rust toolchain"
        run: rustup component add rustfmt
      - run: cargo fmt --all --check

  cargo-clippy:
    name: "cargo clippy"
    runs-on: ubuntu-latest
    needs: determine_changes
    if: ${{ needs.determine_changes.outputs.code == 'true' || github.ref == 'refs/heads/main' }}
    steps:
    - uses: actions/checkout@v4
    - name: "Install Rust toolchain"
      run: |
        rustup component add clippy
        rustup target add wasm32-unknown-unknown
    - uses: Swatinem/rust-cache@v2
    - name: "Clippy"
      run: cargo clippy --workspace --all-targets --all-features --locked -- -D warnings

  scripts:
    name: "test scripts"
    runs-on: ubuntu-latest
    needs: determine_changes
    if: ${{ needs.determine_changes.outputs.code == 'true' || github.ref == 'refs/heads/main' }}
    steps:
    - uses: actions/checkout@v4
    - name: "Install Rust toolchain"
      run: rustup component add rustfmt
    - uses: Swatinem/rust-cache@v2
    - run: cargo check
    - run: cargo fmt --all --check
    - run: cargo nextest run
